name: "üéÆ PSVita Builds"
on: [push, pull_request]

env:
  GODOT_BASE_BRANCH: 3.x
  VITASDK: /usr/local/vitasdk
  VITASDK_VERSION: "vitasdk-x86_64-linux-gnu-2024-08-09_11-28-39"
  VITASDK_URL: "https://github.com/vitasdk/autobuilds/releases/download/master-linux-v2.527/vitasdk-x86_64-linux-gnu-2024-08-09_11-28-39.tar.bz2"
  VITA_PACKAGES_EXTRA_COMMIT: d5b66fa7271abac9689541a59110adc17d06a616
  EUID: 1

concurrency:
  group: ci-${{ github.actor }}-${{ github.head_ref || github.run_number }}-${{ github.ref }}-vita
  cancel-in-progress: true

jobs:
  vita-template:
    runs-on: ubuntu-22.04
    name: Template (target=release, tools=no)

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Restore SCons cache
        uses: ./.github/actions/godot-cache-restore
        with:
          cache-name: vita-template
        continue-on-error: true

      - name: Setup Python & SCons
        uses: ./.github/actions/godot-deps

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            cmake libarchive-tools fakeroot zip wget libelf-dev build-essential \
            libxcursor-dev libx11-dev libxext-dev libxfixes-dev libxi-dev \
            libxinerama-dev libxrender-dev libxrandr-dev libgl1-mesa-dev libglu1-mesa-dev

      - name: Install VitaSDK (clean August 2024)
        run: |
          sudo rm -rf /usr/local/vitasdk
          wget -q "$VITASDK_URL" -O "${VITASDK_VERSION}.tar.bz2"
          sudo tar -xf "${VITASDK_VERSION}.tar.bz2" -C /usr/local/
          sudo chown -R $USER:$USER /usr/local/vitasdk
          echo "VITASDK=/usr/local/vitasdk" >> $GITHUB_ENV
          echo "/usr/local/vitasdk/bin" >> $GITHUB_PATH
          arm-vita-eabi-gcc --version

      - name: Bootstrap vdpm & install core libs
        run: |
          export VITASDK=/usr/local/vitasdk
          export PATH=$VITASDK/bin:$PATH
          git clone https://github.com/vitasdk/vdpm
          cd vdpm
          ./bootstrap-vitasdk.sh
          ./install-all.sh
          vdpm vita-rss-libdl
          cd ..

      - name: Install vita-packages-extra (pvr_psp2)
        run: |
          export VITASDK=/usr/local/vitasdk
          export PATH=$VITASDK/bin:$PATH
          git clone https://github.com/isage/vita-packages-extra
          cd vita-packages-extra
          git checkout $VITA_PACKAGES_EXTRA_COMMIT
          cd pvr_psp2
          ./vita-makepkg
          ../../vdpm/vdpm *-arm.tar.xz
          cd ../..

      - name: Prepare SCons directories
        run: |
          rm -rf .sconf_temp .scons-cache
          mkdir -p .sconf_temp .scons-cache
          chmod -R 777 .sconf_temp .scons-cache

      - name: Compile Godot for Vita
        run: |
          export VITASDK=/usr/local/vitasdk
          export PATH=$VITASDK/bin:$PATH
          export SCONS_CACHE_DIR="$GITHUB_WORKSPACE/.scons-cache"
          scons \
            --no-dry-run \
            p=vita \
            target=release \
            tools=false \
            verbose=no \
            warnings=no \
            werror=no \
            debug_symbols=no \
            use_rtti=True \
            disable_gles3=True \
            cache_dir=$SCONS_CACHE_DIR \
            CCFLAGS="-marm -mno-thumb-interwork" \
            CXXFLAGS="-marm -mno-thumb-interwork" \
            LINKFLAGS="-marm"

      - name: Save SCons cache
        uses: ./.github/actions/godot-cache-save
        with:
          cache-name: vita-template
        continue-on-error: true

      - name: Upload PSVita template artifact
        uses: actions/upload-artifact@v4
        with:
          name: vita-template-${{ github.sha }}
          path: |
            temp-build/vita_release.velf
            temp-build/godot.vita.opt.32
            temp-build/vita_release/

      - name: Debug Build Information
        if: always()
        run: |
          echo "=== Build Summary ==="
          echo "Ubuntu: $(lsb_release -d)"
          echo "VitaSDK: $VITASDK_VERSION"
          echo "Commit: $VITA_PACKAGES_EXTRA_COMMIT"
          echo "Date: $(date)"
          if [[ -f temp-build/vita_release.velf ]]; then
            echo "‚úÖ VELF created"
          else
            echo "‚ùå No VELF; temp-build contents:"
            ls -R temp-build || echo "No temp-build"
          fi
          echo "Cache size: $(du -sh .scons-cache)"
