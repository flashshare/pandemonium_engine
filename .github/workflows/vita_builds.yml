name: ðŸŽ® PSVita Builds
on: [push, pull_request]

env:
  GODOT_BASE_BRANCH: 3.x
  VITASDK: /usr/local/vitasdk
  VITASDK_VERSION: "vitasdk-x86_64-linux-gnu-2025-03-11_15-12-52"
  VITA_PACKAGES_EXTRA_COMMIT: d5b66fa7271abac9689541a59110adc17d06a616
  EUID: 1

concurrency:
  group: ci-${{github.actor}}-${{github.head_ref || github.run_number}}-${{github.ref}}-vita
  cancel-in-progress: true

jobs:
  vita-template:
    runs-on: ubuntu-24.04
    name: Template (target=release)

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Restore Godot build cache
        uses: ./.github/actions/godot-cache-restore
        with:
          cache-name: vita-template
        continue-on-error: true

      - name: Setup python and scons
        uses: ./.github/actions/godot-deps

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake libarchive-tools fakeroot zip wget libelf-dev build-essential

      - name: Setup VitaSDK
        run: |
          wget -q https://github.com/vitasdk/autobuilds/releases/download/master-linux-v2.529/${VITASDK_VERSION}.tar.bz2
          sudo tar -xf ${VITASDK_VERSION}.tar.bz2 -C /usr/local/
          echo "VITASDK=/usr/local/vitasdk" >> $GITHUB_ENV
          echo "/usr/local/vitasdk/bin" >> $GITHUB_PATH

      - name: Install vdpm & vita-rss-libdl
        run: |
          git clone https://github.com/vitasdk/vdpm
          cd vdpm
          ./bootstrap-vitasdk.sh
          ./install-all.sh
          vdpm vita-rss-libdl
          cd ..

      - name: Install vita-packages-extra (pvr_psp2)
        run: |
          git clone https://github.com/isage/vita-packages-extra
          cd vita-packages-extra
          git checkout $VITA_PACKAGES_EXTRA_COMMIT
          cd pvr_psp2
          vita-makepkg
          vdpm *-arm.tar.xz

      - name: Compile Godot for Vita (cache-safe)
        run: |
          export VITASDK=/usr/local/vitasdk
          export PATH=$VITASDK/bin:$PATH
          export SCONS_CACHE_DIR="$GITHUB_WORKSPACE/.scons-cache"
          scons platform=vita \
                target=release \
                tools=false \
                verbose=no \
                warnings=no \
                werror=no \
                debug_symbols=no \
                use_rtti=True \
                disable_gles3=True \
                cache_dir=$SCONS_CACHE_DIR \
                CXXFLAGS="-fno-exceptions -fno-unwind-tables -fno-asynchronous-unwind-tables -marm -mno-unaligned-access -Wno-psabi" \
                CCFLAGS="-fno-exceptions -fno-unwind-tables -fno-asynchronous-unwind-tables -marm -mno-unaligned-access -Wno-psabi" \
                LINKFLAGS="-Wl,--start-group -lpthread -lstdc++ -lm -lc -lgcc \
                -lSceLibKernel_stub -lSceDisplay_stub -lSceCtrl_stub -lSceAudio_stub \
                -lSceCommonDialog_stub -lSceNet_stub -lSceNetCtl_stub -lSceHttp_stub \
                -lSceShellSvc_stub -lSceSysmodule_stub -lScePvf_stub -lSceMotion_stub \
                -lSceFios2_stub -lSceAppUtil_stub -lSceTouch_stub -lSceAppMgr_stub \
                -lSceGxm_stub -Wl,--end-group -Wl,--gc-sections -no-pie"

      - name: Create VELF
        run: |
          export VITASDK=/usr/local/vitasdk
          export PATH=$VITASDK/bin:$PATH
          cp temp-build/godot.vita.opt.32 temp-build/vita_release_stripped
          arm-vita-eabi-strip -g temp-build/vita_release_stripped
          vita-elf-create temp-build/vita_release_stripped temp-build/vita_release.velf

      - name: Package Vita Template
        run: |
          # Prepare layout
          rm -rf dist && mkdir -p dist/vita_release
          # Copy generated vita_release/ directory
          cp -r temp-build/vita_release dist/
          # Create vita_release.zip (template content)
          cd dist
          zip -r vita_release.zip vita_release
          # Wrap into vita-template.zip
          zip -r vita-template.zip vita_release.zip

      - name: Save Godot build cache
        uses: ./.github/actions/godot-cache-save
        with:
          cache-name: vita-template
        continue-on-error: true

      - name: Upload Vita Template
        uses: actions/upload-artifact@v4
        with:
          name: vita-template-${{ github.sha }}
          path: dist/vita-template.zip

      - name: Debug Build Information
        if: always()
        run: |
          echo "=== Build Artifacts ==="
          ls -R temp-build/vita_release || true
          echo "=== Uploaded Dist ==="
          ls -l dist || true
