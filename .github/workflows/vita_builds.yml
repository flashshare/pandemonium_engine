name: "ðŸŽ® PSVita Build"
on: [push, pull_request]

env:
  GODOT_BRANCH: 3.x
  VITASDK_DIR: /usr/local/vitasdk
  VITASDK_TAR: vitasdk-x86_64-linux-gnu-2024-08-09_11-28-39.tar.bz2
  VITASDK_URL: https://github.com/vitasdk/autobuilds/releases/download/master-linux-v2.527
  VITA_PACKAGES_EXTRA_COMMIT: d5b66fa7271abac9689541a59110adc17d06a616

jobs:
  build-vita:
    runs-on: ubuntu-22.04
    concurrency:
      group: ci-${{github.ref}}-vita
      cancel-in-progress: true

    steps:
    - uses: actions/checkout@v4
      with: { submodules: recursive }

    - uses: actions/cache@v4
      with:
        path: .scons-cache
        key: scons-vita-${{github.ref}}-${{github.sha}}
        restore-keys: |
          scons-vita-${{github.ref}}
          scons-vita

    - name: Setup Python & SCons
      uses: ./.github/actions/godot-deps

    - name: Install system packages
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y \
          cmake fakeroot zip wget libelf-dev build-essential \
          libxcursor-dev libx11-dev libxext-dev libxfixes-dev libxi-dev \
          libxinerama-dev libxrender-dev libxrandr-dev libgl1-mesa-dev libglu1-mesa-dev

    - name: Install VitaSDK (Aug 2024)
      run: |
        sudo rm -rf $VITASDK_DIR
        wget -q "$VITASDK_URL/$VITASDK_TAR"
        sudo tar -xf "$VITASDK_TAR" -C /usr/local/
        sudo chown -R $USER:$USER $VITASDK_DIR
        export VITASDK=$VITASDK_DIR
        export PATH=$VITASDK/bin:$PATH
        echo "VITASDK=$VITASDK_DIR" >> $GITHUB_ENV
        echo "$VITASDK_DIR/bin" >> $GITHUB_PATH
        arm-vita-eabi-gcc --version

    - name: Install vdpm packages
      run: |
        export VITASDK=$VITASDK_DIR
        export PATH=$VITASDK/bin:$PATH
        git clone https://github.com/vitasdk/vdpm
        cd vdpm
        chmod +x vdpm install-all.sh
        ./install-all.sh
        # Install core packages
        ./vdpm -f taihen libdl libogg libzstd libpcre2-32 theora opus jpeg png z
        ./vdpm vita-rss-libdl
        cd ..

    - name: Install vita-packages-extra with GPU ES4 headers
      run: |
        export VITASDK=$VITASDK_DIR
        export PATH=$VITASDK/bin:$PATH
        
        # Clone and build vita-packages-extra for complete header set
        git clone https://github.com/isage/vita-packages-extra
        cd vita-packages-extra
        git checkout $VITA_PACKAGES_EXTRA_COMMIT
        
        # Build and install pvr_psp2 package manually for complete headers
        cd pvr_psp2
        ./vita-makepkg
        ../vdpm/vdpm *-arm.tar.xz
        
        # Verify GPU ES4 headers are installed
        echo "=== Checking for GPU ES4 headers ==="
        find $VITASDK_DIR -name "*psp2_pvr*" -type f | head -5
        find $VITASDK_DIR -name "psp2_pvr_hint.h" || echo "psp2_pvr_hint.h not found"
        
        cd ../..

    - name: Prepare SCons directories
      run: |
        rm -rf .sconf_temp .scons-cache
        mkdir -p .sconf_temp .scons-cache
        chmod -R 777 .sconf_temp .scons-cache

    - name: Compile Godot (PS Vita)
      run: |
        export VITASDK=$VITASDK_DIR
        export PATH=$VITASDK/bin:$PATH
        
        # Add explicit include paths for GPU ES4 headers
        VITA_INCLUDES="-I$VITASDK_DIR/arm-vita-eabi/include -I$VITASDK_DIR/include"
        
        scons \
          p=vita target=release tools=no \
          verbose=no warnings=no werror=no debug_symbols=no \
          use_rtti=yes disable_gles3=yes \
          cache_dir=.scons-cache \
          CCFLAGS="-marm -mno-thumb-interwork $VITA_INCLUDES" \
          CXXFLAGS="-marm -mno-thumb-interwork $VITA_INCLUDES" \
          LINKFLAGS="-marm"

    - uses: actions/cache@v4
      if: always()
      with:
        path: .scons-cache
        key: scons-vita-${{github.ref}}-${{github.sha}}

    - name: Upload PSVita template
      uses: actions/upload-artifact@v4
      with:
        name: vita-template-${{github.sha}}
        path: |
          temp-build/vita_release.velf
          temp-build/godot.vita.opt.32
          temp-build/vita_release/

    - name: Debug info
      if: always()
      run: |
        echo "=== Build Status ==="
        ls -R temp-build || true
        echo "=== GPU ES4 Header Check ==="
        find $VITASDK_DIR -name "*psp2_pvr*" | head -10
        echo "=== Cache ==="
        du -sh .scons-cache || true
